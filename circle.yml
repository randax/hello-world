machine:
  node:
    version: 4.4
  python:
    version: 2.7.3
  services:
    - docker
  environment:
    IMAGE_NAME: hello-world
    CLOUDSDK_CORE_DISABLE_PROMPTS: 1
    CLOUDSDK_PYTHON_SITEPACKAGES: 1
    CLOUDSDK_COMPUTE_ZONE: us-central1-b
    CLOUDSDK_CORE_PROJECT: $GCLOUD_PROJECTID
#    PATH: $PATH:/home/ubuntu/google-cloud-sdk/bin

dependencies:
  cache_directories:
    - ~/google-cloud-sdk
    - ~/docker
    - ~/kubernetes
  override:
    - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; fi
    - docker build -t $EXTERNAL_REGISTRY_ENDPOINT/hello-world:$CIRCLE_SHA1 .
    - mkdir -p ~/docker; docker save $EXTERNAL_REGISTRY_ENDPOINT/hello-world:$CIRCLE_SHA1 > ~/docker/image.tar
  pre:

    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
    - sudo chmod 757 /home/ubuntu/.config/gcloud/logs -R
    - npm install --global mocha
    - npm install --production
    - docker build -t $EXTERNAL_REGISTRY_ENDPOINT/hello-world:$CIRCLE_SHA1 .

test:
  override:
    - mocha test/unit
    - docker run -d -p 8000:8000 $EXTERNAL_REGISTRY_ENDPOINT/hello-world:$CIRCLE_SHA1
    - mocha test/integration

deployment:
  prod:
    branch: master
    commands:
      - ./auth-gcloud.sh
      - gcloud docker push $EXTERNAL_REGISTRY_ENDPOINT/hello-world
      - gcloud config set project i-guide-127220
      - gcloud config set compute/zone us-central1-b
      - gcloud config set container/cluster $IMAGE_NAME
#      - gcloud container clusters get-credentials hello-world
      - kubectl run hello-world --image=$EXTERNAL_REGISTRY_ENDPOINT/hello-world:$CIRCLE_SHA1 --port=8000
      - kubectl expose deployment hello-world --type="LoadBalancer"